// -*- mode: python -*-
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_absolute_error

# Load dataset (replace 'weather_data.csv' with your actual dataset)
df = pd.read_csv('weather_data.csv')

# Select relevant features (adjust based on your dataset)
features = ['humidity', 'pressure', 'wind_speed']
target = 'temperature'

# Drop missing values
df = df.dropna()

# Split data
X = df[features]
y = df[target]
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train a RandomForest model
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Predict on test data
y_pred = model.predict(X_test)

# Evaluate model
mae = mean_absolute_error(y_test, y_pred)
print(f'Mean Absolute Error: {mae:.2f}Â°C')

# Save the trained model
import joblib
joblib.dump(model, 'weather_model.pkl')

print("Model saved as weather_model.pkl")
